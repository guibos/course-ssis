<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/28/2022 11:55:24 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-6HFS2QR"
  DTS:CreatorName="DESKTOP-6HFS2QR\jacin"
  DTS:DTSID="{0051A11C-7C75-4432-95FA-D3761A375022}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.180"
  DTS:LocaleID="3082"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="15"
  DTS:VersionGUID="{A6B08813-C542-4575-8E14-382918111E2C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Administrador de conexiones de archivos planos]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{6AA6B26F-4880-4033-807B-390BB761479F}"
      DTS:ObjectName="Administrador de conexiones de archivos planos">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="3082"
          DTS:HeaderRowsToSkip="1"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\courses\ssis-course\data\TiposDePago.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="250"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="LineaTotal"
              DTS:DTSID="{074A2733-24EC-4B1B-A812-17EF70131196}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ConexionCSVConEncabezado]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{75992F3B-582B-4B42-82D3-345533E920BC}"
      DTS:ObjectName="ConexionCSVConEncabezado">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="3082"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\courses\ssis-course\data\csvConEncabezado.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="Id"
              DTS:DTSID="{360F8137-532B-4F7A-B791-C17529C1517E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="7"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Name"
              DTS:DTSID="{50929873-5F0F-43A1-9443-2D68775EC7CA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="Age"
              DTS:DTSID="{7BD113AF-729D-46D1-94F5-3C6CF9D0141D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="2"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Turno"
              DTS:DTSID="{EE717642-A8E6-4D96-823D-22293F5259EE}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.AdventureWorksDW2016]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4170E127-27AD-437F-8B2B-D812A93E7C23}"
      DTS:ObjectName="LocalHost.AdventureWorksDW2016">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=AdventureWorksDW2016;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Carga CSV"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tarea Flujo de datos"
      DTS:DTSID="{6FE95DCF-9494-4EB2-BDF2-02EA20D15B2D}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga CSV"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Carga CSV\DimensionOperario01"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="Destino de OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;4"
              description="Destino de OLE DB"
              name="DimensionOperario01"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">[dbo].[DimensionOperario01]</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica la página de códigos de columna para utilizar cuando la información de página de códigos no está disponible en el origen de datos."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Fuerza el uso del valor de la propiedad DefaultCodePage al describir datos de caracteres."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indica si los valores proporcionados para columnas de identidad se van a copiar al destino. Si es False, los valores de las columnas de identidad se generan automáticamente en el destino. Solo se aplica si está activada la carga rápida."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indica si las columnas que contienen NULL tendrán NULL insertado en el destino. Si es False, las columnas que contienen NULL tendrán sus valores predeterminados insertados en el destino. Solo se aplica si está activada la carga rápida."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Especifica opciones para usar con la carga rápida. Solo se aplica si está activada la carga rápida."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Especifica cuándo se emiten confirmaciones durante la inserción de datos. El valor 0 especifica que se emitirá una confirmación al final de la inserción de datos. Solo se aplica si está activada la carga rápida."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Carga CSV\DimensionOperario01.Connections[OleDbConnection]"
                  connectionManagerID="{5FB31ACA-D02E-429D-84EC-BCE579C63249}:external"
                  connectionManagerRefId="Project.ConnectionManagers[LocalHost.DW1]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB]"
                  errorOrTruncationOperation="Insertar"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Entrada de destino de OLE DB">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].Columns[Id]"
                      cachedDataType="i1"
                      cachedName="Id"
                      externalMetadataColumnId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].ExternalColumns[Id]"
                      lineageId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Id]" />
                    <inputColumn
                      refId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].Columns[Name]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="7"
                      cachedName="Name"
                      externalMetadataColumnId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].ExternalColumns[Name]"
                      lineageId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Name]" />
                    <inputColumn
                      refId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].Columns[Age]"
                      cachedDataType="i1"
                      cachedName="Age"
                      externalMetadataColumnId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].ExternalColumns[Age]"
                      lineageId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Age]" />
                    <inputColumn
                      refId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].Columns[Turno]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedName="Turno"
                      externalMetadataColumnId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].ExternalColumns[Turno]"
                      lineageId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Turno]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].ExternalColumns[Id]"
                      dataType="i2"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].ExternalColumns[Name]"
                      codePage="1252"
                      dataType="str"
                      length="7"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].ExternalColumns[Age]"
                      dataType="i2"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB].ExternalColumns[Turno]"
                      codePage="1252"
                      dataType="str"
                      length="2"
                      name="Turno" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Carga CSV\DimensionOperario01.Outputs[Salida de error de destino de OLE DB]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Salida de error de destino de OLE DB"
                  synchronousInputId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Carga CSV\DimensionOperario01.Outputs[Salida de error de destino de OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Carga CSV\DimensionOperario01.Outputs[Salida de error de destino de OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Carga CSV\DimensionOperario01.Outputs[Salida de error de destino de OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Carga CSV\DimensionOperario01.Outputs[Salida de error de destino de OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Origen de archivo plano;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;1"
              description="Origen de archivo plano"
              localeId="3082"
              name="Origen de Conexion CSV con Encabezado"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Especifica si las columnas de longitud cero se tratan como NULL."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre de una columna de salida que contiene el nombre de archivo. Si no se especifica ningún nombre, no se genera ninguna columna de salida con el nombre de archivo."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[ConexionCSVConEncabezado]"
                  connectionManagerRefId="Package.ConnectionManagers[ConexionCSVConEncabezado]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano]"
                  name="Salida de origen de archivo plano">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Id]"
                      dataType="i1"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].ExternalColumns[Id]"
                      lineageId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Id]"
                      name="Id"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si los datos están en formato binario."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Name]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].ExternalColumns[Name]"
                      length="7"
                      lineageId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Name]"
                      name="Name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si los datos están en formato binario."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Age]"
                      dataType="i1"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].ExternalColumns[Age]"
                      lineageId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si los datos están en formato binario."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Turno]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].ExternalColumns[Turno]"
                      length="2"
                      lineageId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].Columns[Turno]"
                      name="Turno"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si los datos están en formato binario."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].ExternalColumns[Id]"
                      dataType="i1"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].ExternalColumns[Name]"
                      codePage="1252"
                      dataType="str"
                      length="7"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].ExternalColumns[Age]"
                      dataType="i1"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano].ExternalColumns[Turno]"
                      codePage="1252"
                      dataType="str"
                      length="2"
                      name="Turno" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de error de origen de archivo plano]"
                  isErrorOut="true"
                  name="Salida de error de origen de archivo plano">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de error de origen de archivo plano].Columns[Columna de salida de error de origen de archivo plano]"
                      codePage="1252"
                      dataType="text"
                      description="Columna de salida de error de origen de archivo plano"
                      lineageId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de error de origen de archivo plano].Columns[Columna de salida de error de origen de archivo plano]"
                      name="Columna de salida de error de origen de archivo plano" />
                    <outputColumn
                      refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de error de origen de archivo plano].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de error de origen de archivo plano].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de error de origen de archivo plano].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de error de origen de archivo plano].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Carga CSV.Paths[Salida de origen de archivo plano]"
              endId="Package\Carga CSV\DimensionOperario01.Inputs[Entrada de destino de OLE DB]"
              name="Salida de origen de archivo plano"
              startId="Package\Carga CSV\Origen de Conexion CSV con Encabezado.Outputs[Salida de origen de archivo plano]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga de Tipos de Pago"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tarea Flujo de datos"
      DTS:DTSID="{35C9F21B-5C57-4647-B2CB-A600C02048A0}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga de Tipos de Pago">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Carga de Tipos de Pago\Columna derivada para añadir información"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Columna derivada;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;0"
              description="Crea nuevos valores de columna aplicando expresiones a las columnas de entrada de la transformación. Crea nuevas columnas o sobrescribe las columnas existentes. Por ejemplo, se concatenan los valores de las columnas 'nombre' y 'apellidos' para crear una columna 'nombre completo'."
              name="Columna derivada para añadir información"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Inputs[Entrada de columna derivada]"
                  description="Entrada en la transformación Columna derivada"
                  name="Entrada de columna derivada">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de columna derivada]"
                  description="Salida predeterminada de la transformación Columna derivada"
                  exclusionGroup="1"
                  name="Salida de columna derivada"
                  synchronousInputId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Inputs[Entrada de columna derivada]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de columna derivada].Columns[FechaActual]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Cálculo"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de columna derivada].Columns[FechaActual]"
                      name="FechaActual"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Expresión de columna derivada"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Expresión descriptiva de columna derivada"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de columna derivada].Columns[UsuarioDelProceso]"
                      dataType="wstr"
                      errorOrTruncationOperation="Cálculo"
                      errorRowDisposition="FailComponent"
                      length="25"
                      lineageId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de columna derivada].Columns[UsuarioDelProceso]"
                      name="UsuarioDelProceso"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Expresión de columna derivada"
                          name="Expression">@[System::UserName]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Expresión descriptiva de columna derivada"
                          expressionType="Notify"
                          name="FriendlyExpression">@[System::UserName]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de error de columna derivada]"
                  description="Salida de error de la transformación Columna derivada"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Salida de error de columna derivada"
                  synchronousInputId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Inputs[Entrada de columna derivada]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de error de columna derivada].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de error de columna derivada].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de error de columna derivada].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de error de columna derivada].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Carga de Tipos de Pago\Componente de script LECTURA"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Incluye y ejecuta código de scripts personalizados. Por ejemplo, se usa para aplicar una regla de negocios que limita el intervalo de valores válidos de una columna de ingresos o para sumar los valores de dos columnas y calcular el promedio de la suma.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;12"
              description="Incluye y ejecuta código de scripts personalizados. Por ejemplo, se usa para aplicar una regla de negocios que limita el intervalo de valores válidos de una columna de ingresos o para sumar los valores de dos columnas y calcular el promedio de la suma."
              name="Componente de script LECTURA"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Almacena el código fuente del componente"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Entrada0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Entrada0_ProcessInputRow(Entrada0Buffer Row)
    {
        if (!Row.LineaTotal_IsNull)
        {
            var ColeccionDeCampos = Row.LineaTotal.Split(',');
            try
            {
                if (ColeccionDeCampos.Length == 5)
                {
                    Row.ID = Int32.Parse(ColeccionDeCampos[0]);
                    Row.TipoDePago = ColeccionDeCampos[1];
                    int año = Int32.Parse(ColeccionDeCampos[2].Substring(0, 4));
                    int mes = Int32.Parse(ColeccionDeCampos[2].Substring(4, 2));
                    int dia = Int32.Parse(ColeccionDeCampos[2].Substring(6, 2));
                    DateTime fecha = new DateTime(año, mes, dia);
                    Row.FechaPago = fecha;
                    Row.Precio = Decimal.Parse(ColeccionDeCampos[3]);
                    string admitido = ColeccionDeCampos[4];
                    if (admitido == "sí")
                        Row.Admitido = true;
                    else
                        Row.Admitido = false;
                    Row.RazonDelError = "";
                }
            }
            catch (Exception e)
            {
                Row.RazonDelError = (e.Message + "Row.LineTotal");
            }
        }
        else
        {
            Row.RazonDelError = "Numero de Campos Incorrecto";
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Entrada0Buffer: ScriptBuffer

{
    public Entrada0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String LineaTotal
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool LineaTotal_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("La propiedad IsNull no puede establecerse en False. En su lugar, asigne un valor a la columna.");
            }
        }
    }

    public String TipoDePago
    {
        set
        {
            this[2] = value;
        }
    }
    public bool TipoDePago_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("La propiedad IsNull no puede establecerse en False. En su lugar, asigne un valor a la columna.");
            }
        }
    }

    public DateTime FechaPago
    {
        set
        {
            this[3] = value;
        }
    }
    public bool FechaPago_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("La propiedad IsNull no puede establecerse en False. En su lugar, asigne un valor a la columna.");
            }
        }
    }

    public Decimal Precio
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Precio_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("La propiedad IsNull no puede establecerse en False. En su lugar, asigne un valor a la columna.");
            }
        }
    }

    public Boolean Admitido
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Admitido_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("La propiedad IsNull no puede establecerse en False. En su lugar, asigne un valor a la columna.");
            }
        }
    }

    public String RazonDelError
    {
        set
        {
            this[6] = value;
        }
    }
    public bool RazonDelError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("La propiedad IsNull no puede establecerse en False. En su lugar, asigne un valor a la columna.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Entrada 0", StringComparison.Ordinal))
        {
            Entrada0_ProcessInput(new Entrada0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Entrada0_ProcessInput(Entrada0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Entrada0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Entrada0_ProcessInputRow(Entrada0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f52965ea0f58423ca883cb3bbc2105c7.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C1AC45E6-360E-4A36-97A7-246708E158A3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f52965ea0f58423ca883cb3bbc2105c7</RootNamespace>
    <AssemblyName>SC_47766CF3AC2D47019C27EBB10E167422</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f52965ea0f58423ca883cb3bbc2105c7.Properties.Settings.get_Default():SC_f52965ea0f58423ca883cb3bbc2105c7.Properties.Sett" +
    "ings")]

namespace SC_f52965ea0f58423ca883cb3bbc2105c7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_f52965ea0f58423ca883cb3bbc2105c7</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_f52965ea0f58423ca883cb3bbc2105c7</msb:DisplayName>
    <msb:ProjectId>{AE9C2256-96BE-48E3-B265-D1654E7B0CB7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f52965ea0f58423ca883cb3bbc2105c7.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:Breakpoint Include="e11564765b2e46efae5508e453e89c52">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>21</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>126</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f52965ea0f58423ca883cb3bbc2105c7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f52965ea0f58423ca883cb3bbc2105c7")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f52965ea0f58423ca883cb3bbc2105c7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f52965ea0f58423ca883cb3bbc2105c7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f52965ea0f58423ca883cb3bbc2105c7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f52965ea0f58423ca883cb3bbc2105c7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f52965ea0f58423ca883cb3bbc2105c7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Almacena la representación binaria del componente"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_47766CF3AC2D47019C27EBB10E167422.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANYRa2IAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAujYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGg2AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAwBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACc
NgAAAAAAAEgAAAACAAUAWCMAAFgSAAABAAAAAAAAALA1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAUA5QAAAAEAABEDbwcAAAY6
zgAAAANvBgAABheNHQAAASUWHyydbxIAAAoKBo5pG0CRAAAAAwYWmigTAAAKbwgAAAYDBheabwoA
AAYGGJoWGm8UAAAKKBMAAAoLBhiaGhhvFAAACigTAAAKDAYYmhwYbxQAAAooEwAACg0SBAcICSgV
AAAKAxEEbwwAAAYDBhmaKBYAAApvDgAABgYamnIBAABwKBcAAAosCQMXbxAAAAYrBwMWbxAAAAYD
cgcAAHBvEgAABt4mEwUDEQVvGAAACnIJAABwKBkAAApvEgAABt4LA3IlAABwbxIAAAYqAAAAARAA
AAAAIgCcvgAbDwAAAR4CKBYAAAYqKgIDBAUoGgAACipSAnsbAAAKAnscAAAKFpRvHQAACioiAhYo
HgAACio6AhcDjB8AAAEoHwAACipaAywIAhcoIAAACipyXQAAcHMhAAAKeiYCGAMoHwAACipaAywI
AhgoIAAACipyXQAAcHMhAAAKejoCGQOMDgAAASgfAAAKKloDLAgCGSggAAAKKnJdAABwcyEAAAp6
OgIaA4wTAAABKB8AAAoqWgMsCAIaKCAAAAoqcl0AAHBzIQAACno6AhsDjCEAAAEoHwAACipaAywI
AhsoIAAACipyXQAAcHMhAAAKeiYCHAMoHwAACipaAywIAhwoIAAACipyXQAAcHMhAAAKeh4CKCIA
AAoqHgIoIwAACip+AigkAAAKAgJzGgAABn0BAAAEAgJzGwAABn0CAAAEKpIEchwBAHAabyUAAAos
FQIFAgMoJgAACg4EcwUAAAZvGAAABipKKwcCA28ZAAAGA28UAAAGLfEqBio6AignAAAKAgN9AwAA
BCo6AignAAAKAgN9BAAABCoeAignAAAKKq5+BQAABC0ecjABAHDQBwAAAigoAAAKbykAAApzKgAA
CoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKCsAAAoqLnMhAAAGgAcAAAQqAAAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAAAcAACN+AABsBwAAQAcAACNTdHJp
bmdzAAAAAKwOAACkAQAAI1VTAFAQAAAQAAAAI0dVSUQAAABgEAAA+AEAACNCbG9iAAAAAAAAAAIA
AAFXFaIBCQEAAAD6ATMAFgAAAQAAACUAAAAIAAAABwAAACIAAAAZAAAAKwAAABAAAAABAAAAAwAA
ABEAAAASAAAAAQAAAAQAAAABAAAAAAA2AwEAAAAAAAYADAJZBQYAoAJZBQYAWAFGBQ8AzQUAAAYA
hQFNBAYA7wFNBAYA0AFNBAYAhwJNBAYALAJNBAYARQJNBAYAnAFNBAYAtwHbAgoAYAKfAAYAlgD9
AwYAbwT9AwoABgWfAA4A9wSfAAoAywSfAAYACQP9AwoAoAafAAYAXQb9AwYAOwFGBQYAFwV5BQYA
lwQ4BBIACwEgAxIAbAEgAxIA7QAjBAYAIAFZBQYA4wT9AwYA+AL9AwYAJQD9AwYAXwT9AwYAEAT9
AwYAeQT9AwYAwAD9AwYAaAD9AwYAKQdNBAAAAAArAAAAAAABAAEAAQAQABgEAAAQAAEAAQABABAA
6AQAAEEAAQAFAAEAEACCBgAAUQABABYAAQAQAEoGAABVAAMAGgABABAACwYAAFUABAAbAAAAEACA
BdwFVQAFABwAAAEQADoG3AVtAAcAIAAGAEoGswAGAAsGtwABAJAGuwABAJAGuwARAAQEvwARAN0A
wwARAEwAxwBQIAAAAADGAL4CBgABAFggAAAAAMYAyQIGAAEAYCAAAAAAxgAEB8sAAQBkIQAAAACG
GDkFBgACAGwhAAAAAIYYOQVWAAIAdyEAAAAAhggRA0wABQCMIQAAAACGCGwDeAAFAJUhAAAAAIYI
NAABAAUApCEAAAAAhgheA9EABgC7IQAAAACGCLEEEAAHAMUhAAAAAIYIqwPRAAgA3CEAAAAAhgij
BNYACQDrIQAAAACGCJYD0QAKAAIiAAAAAIYIwATcAAsAESIAAAAAhgjBA9EADAAoIgAAAACGCIoE
0QANADciAAAAAIYIggPRAA4ATiIAAAAAhggnBRAADwBYIgAAAACGCNMD0QAQAG8iAAAAAIYAHQd4
ABEAdyIAAAAAhgBkBngAEQB/IgAAAACGGDkFBgARAJ8iAAAAAMYA9wbiABEAxCIAAAAAxgHuBssA
FQDXIgAAAADGAQQHywAWANkiAAAAAIYYOQXsABcA6CIAAAAAhhg5BewAGAD3IgAAAACDGDkFBgAZ
AP8iAAAAAJMIEwXyABkAKyMAAAAAkwjFAPcAGQAyIwAAAACTCNEA/AAZADojAAAAAJYIdgYCARoA
QSMAAAAAhhg5BQYAGgBJIwAAAACRGD8FBwEaAAAAAQAhBwAAAQAMBQAAAgAVBgAAAwDZBAAAAQDV
AgAAAQDVAgAAAQDVAgAAAQDVAgAAAQDVAgAAAQDVAgAAAQDVAgAAAQDVAgAAAQDVAgAAAQDVAgAA
AQDVAgAAAQDVAgAAAQA7AAAAAgCMAAAAAwAMBQAABADZBAAAAQAMBQAAAQAhBwAAAQCmBgAAAQCm
BgAAAQDVAgkAOQUBABEAOQUGABkAOQUKACkAOQUQADEAOQUQADkAOQUQAEEAOQUQAEkAOQUQAFEA
OQUQAFkAOQUQAGEAOQUQAGkAOQUGALEAOQUGANEAOQUVAOEAOQUGAKEAvgIGAKEAyQIGAPEAcAYn
APkABQEuAPEA/wIzAHEAOQU5AJkABQFAAPEAMgdGAHkAXABMAPEAVgZQAIEAOQVWAIEADAVgAIEA
FQZkAIkA9QJoAIEA5QNtAIEA9ANyAIEA7AMBAAEBOQUQAIEAHQd4AIEAZAZ4AKEAOQUGAPEAQwZ8
AKEAKQaEAKkAOQUGABkBegCKABkBJQeTALkAOQWZANkAOQUGAC4ACwAwAS4AEwA5AS4AGwBYAS4A
IwBhAS4AKwCKAS4AMwCKAS4AOwCKAS4AQwBhAS4ASwCQAS4AUwCKAS4AWwCnAUMAYwDxAeEAewDx
AeMAawDxAekBcwBYAQkCcwBYARsAAwABAAcADwAIABEAAAAVAwsBAABwAw8BAABAABMBAABiAw8B
AAC1BAsBAACvAw8BAACnBBcBAACaAw8BAADEBBwBAADFAw8BAACOBA8BAACGAw8BAAArBQsBAADX
Aw8BAAAXBSEBAADlACYBAAB6BisBAgAGAAMAAgAHAAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0A
AQAMAA8AAQANABEAAQAOABMAAQAPABUAAQAQABcAAQARABkAAQASABsAAQATAB0AAgAdAB8AAgAe
ACEAAQAfACEAAgAgACMABIAAAAEAAAAAAAAAAAAAAAAAAQAAAAQAAAAAAAAAAAAAAKEAQwAAAAAA
DwAAAAAAAAAAAAAAqgCwBgAAAAAPAAAAAAAAAAAAAACqAM0GAAAAAAQAAAAAAAAAAAAAAKEA/QMA
AAAAAAAAAAEAAACKBQAAAAAAAABTQ180Nzc2NkNGM0FDMkQ0NzAxOUMyN0VCQjEwRTE2NzQyMgBJ
bnQzMgA8TW9kdWxlPgBzZXRfSUQASW5wdXRJRABtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAZ2V0
X01lc3NhZ2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAERh
dGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUA
c2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFBhcnNl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1
dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAU3Vic3RyaW5nAERl
Y2ltYWwAZ2V0X0xpbmVhVG90YWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzQ3NzY2Q0YzQUMy
RDQ3MDE5QzI3RUJCMTBFMTY3NDIyLmRsbABzZXRfSURfSXNOdWxsAGdldF9MaW5lYVRvdGFsX0lz
TnVsbABzZXRfQWRtaXRpZG9fSXNOdWxsAHNldF9GZWNoYVBhZ29fSXNOdWxsAHNldF9UaXBvRGVQ
YWdvX0lzTnVsbABzZXRfUHJlY2lvX0lzTnVsbABzZXRfUmF6b25EZWxFcnJvcl9Jc051bGwAU2V0
TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AQm9vbGVhbgBTY3JpcHRNYWluAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAElu
dmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBzZXRfQWRtaXRpZG8AQ3Vs
dHVyZUluZm8Ac2V0X0ZlY2hhUGFnbwBzZXRfVGlwb0RlUGFnbwBzZXRfUHJlY2lvAE91dHB1dE5h
bWVNYXAAT3V0cHV0TWFwAENoYXIARW50cmFkYTBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0
QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAc2V0X1Jhem9uRGVsRXJyb3IALmN0b3IALmNjdG9y
AFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAU0NfZjUyOTY1ZWEwZjU4NDIzY2E4ODNjYjNiYmMyMTA1YzcuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2Y1Mjk2NWVhMGY1ODQyM2Nh
ODgzY2IzYmJjMjEwNWM3LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMA
R2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29uY2F0AE9iamVj
dABFbmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBv
bmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABFbnRyYWRhMF9Qcm9jZXNzSW5wdXQARW50cmFkYTBf
UHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AG9wX0VxdWFsaXR5AAAAAAVzAO0A
AQEAG1IAbwB3AC4ATABpAG4AZQBUAG8AdABhAGwAADdOAHUAbQBlAHIAbwAgAGQAZQAgAEMAYQBt
AHAAbwBzACAASQBuAGMAbwByAHIAZQBjAHQAbwAAgL1MAGEAIABwAHIAbwBwAGkAZQBkAGEAZAAg
AEkAcwBOAHUAbABsACAAbgBvACAAcAB1AGUAZABlACAAZQBzAHQAYQBiAGwAZQBjAGUAcgBzAGUA
IABlAG4AIABGAGEAbABzAGUALgAgAEUAbgAgAHMAdQAgAGwAdQBnAGEAcgAsACAAYQBzAGkAZwBu
AGUAIAB1AG4AIAB2AGEAbABvAHIAIABhACAAbABhACAAYwBvAGwAdQBtAG4AYQAuAAATRQBuAHQA
cgBhAGQAYQAgADAAAHFTAEMAXwBmADUAMgA5ADYANQBlAGEAMABmADUAOAA0ADIAMwBjAGEAOAA4
ADMAYwBiADMAYgBiAGMAMgAxADAANQBjADcALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAAAAAY2VKyk8+UUKhWyLZg+eQEAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQER
ZQsHBh0OCAgIETkSPQYgAR0OHQMEAAEIDgUgAg4ICAYgAwEICAgFAAERTQ4FAAICDg4DIAAOBQAC
Dg4OCSADARJFHQgSSQMGEkUDBh0IBCABDggEIAECCAUgAgEIHAMgAAIHIAICDhGAiQUgAR0ICAgA
ARKAjRGAkQUgABKAlQcgAgEOEoCVCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJRAwYSXQMG
EmEDBhIgBSABARIMBCABAQIFIAEBETkFIAEBEU0JIAQBCA4SRRJJBSABARJRBAAAEl0EAAASYQUA
AQESYQQAABIgAwAAAQMoAA4DKAACAygACAQoABE5BCgAEU0ECAASXQQIABJhBAgAEiAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2Y1Mjk2NWVh
MGY1ODQyM2NhODgzY2IzYmJjMjEwNWM3AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjIAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC43BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACQNgAAAAAAAAAAAACqNgAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAnDYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AZgA1ADIAOQA2ADUAZQBhADAAZgA1ADgANAAyADMAYwBhADgAOAAzAGMAYgAzAGIAYgBj
ADIAMQAwADUAYwA3AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA0ADcANwA2ADYAQwBG
ADMAQQBDADIARAA0ADcAMAAxADkAQwAyADcARQBCAEIAMQAwAEUAMQA2ADcANAAyADIALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADQANwA3
ADYANgBDAEYAMwBBAEMAMgBEADQANwAwADEAOQBDADIANwBFAEIAQgAxADAARQAxADYANwA0ADIA
MgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmADUAMgA5
ADYANQBlAGEAMABmADUAOAA0ADIAMwBjAGEAOAA4ADMAYwBiADMAYgBiAGMAMgAxADAANQBjADcA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAALw2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del proyecto de Microsoft Visual Studio Tools para Aplicaciones. Los nombres de proyecto deben ser únicos en el paquete."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_47766cf3ac2d47019c27ebb10e167422</property>
                <property
                  dataType="System.String"
                  description="Especifica el lenguaje de programación que utiliza el script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Especifica una lista separada por comas de variables de solo lectura."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Especifica una lista separada por comas de variables de lectura/escritura."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Lista de puntos de interrupción presentes en el script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;126&lt;/FileLine&gt;
&lt;FileColumn&gt;21&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Suma de comprobación para comparar los metadatos del componente con los códigos compilados."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">E0</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Inputs[Entrada 0]"
                  hasSideEffects="true"
                  name="Entrada 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Inputs[Entrada 0].Columns[LineaTotal]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="LineaTotal"
                      lineageId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de origen de archivo plano].Columns[LineaTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0]"
                  name="Salida 0"
                  synchronousInputId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Inputs[Entrada 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[TipoDePago]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[TipoDePago]"
                      name="TipoDePago" />
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[FechaPago]"
                      dataType="date"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[FechaPago]"
                      name="FechaPago" />
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[Precio]"
                      dataType="cy"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[Precio]"
                      name="Precio" />
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[Admitido]"
                      dataType="bool"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[Admitido]"
                      name="Admitido" />
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[RazonDelError]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[RazonDelError]"
                      name="RazonDelError" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Carga de Tipos de Pago\División condicional"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="División condicional;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;0"
              description="Enruta filas de datos a diferentes salidas según el contenido de los datos. Se usan condiciones (expresiones de SSIS) para especificar las filas que se van a enrutar. Por ejemplo, se usa para separar los registros que deben limpiarse de los registros listos para ser cargados o para enrutar solamente un subconjunto de registros."
              name="División condicional"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Carga de Tipos de Pago\División condicional.Inputs[Entrada de división condicional]"
                  description="Entrada en la transformación División condicional"
                  name="Entrada de división condicional">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\División condicional.Inputs[Entrada de división condicional].Columns[RazonDelError]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="RazonDelError"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[RazonDelError]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Carga de Tipos de Pago\División condicional.Outputs[Error]"
                  description="Salida 1 de la transformación División condicional"
                  errorOrTruncationOperation="Cálculo"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Error"
                  synchronousInputId="Package\Carga de Tipos de Pago\División condicional.Inputs[Entrada de división condicional]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Especifica la expresión. Esta versión de expresión usa identificadores de linaje en lugar de nombres de columna."
                      name="Expression">[LEN](#{Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[RazonDelError]}) != 0</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Especifica la versión descriptiva de la expresión. Esta versión de expresión usa nombres de columna."
                      expressionType="Notify"
                      name="FriendlyExpression">LEN(RazonDelError) != 0</property>
                    <property
                      dataType="System.Int32"
                      description="Especifica la posición de la condición en la lista de condiciones que evalúa la transformación. El orden de evaluación es del menor al mayor valor."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Carga de Tipos de Pago\División condicional.Outputs[Correcto]"
                  description="Salida predeterminada de la transformación División condicional"
                  exclusionGroup="1"
                  name="Correcto"
                  synchronousInputId="Package\Carga de Tipos de Pago\División condicional.Inputs[Entrada de división condicional]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Carga de Tipos de Pago\División condicional.Outputs[Salida de error de división condicional]"
                  description="Salida de error de la transformación División condicional"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Salida de error de división condicional"
                  synchronousInputId="Package\Carga de Tipos de Pago\División condicional.Inputs[Entrada de división condicional]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\División condicional.Outputs[Salida de error de división condicional].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Carga de Tipos de Pago\División condicional.Outputs[Salida de error de división condicional].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\División condicional.Outputs[Salida de error de división condicional].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Carga de Tipos de Pago\División condicional.Outputs[Salida de error de división condicional].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="Destino de OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;4"
              description="Destino de OLE DB"
              name="Errores en Carga Tipo Pago"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">[Errores en Carga Tipo Pago]</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica la página de códigos de columna para utilizar cuando la información de página de códigos no está disponible en el origen de datos."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Fuerza el uso del valor de la propiedad DefaultCodePage al describir datos de caracteres."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indica si los valores proporcionados para columnas de identidad se van a copiar al destino. Si es False, los valores de las columnas de identidad se generan automáticamente en el destino. Solo se aplica si está activada la carga rápida."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indica si las columnas que contienen NULL tendrán NULL insertado en el destino. Si es False, las columnas que contienen NULL tendrán sus valores predeterminados insertados en el destino. Solo se aplica si está activada la carga rápida."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Especifica opciones para usar con la carga rápida. Solo se aplica si está activada la carga rápida."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Especifica cuándo se emiten confirmaciones durante la inserción de datos. El valor 0 especifica que se emitirá una confirmación al final de la inserción de datos. Solo se aplica si está activada la carga rápida."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Connections[OleDbConnection]"
                  connectionManagerID="{ECD28D44-518D-455A-8349-B84BDDE51AAA}:external"
                  connectionManagerRefId="Project.ConnectionManagers[LocalHost.Problemas]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB]"
                  errorOrTruncationOperation="Insertar"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Entrada de destino de OLE DB">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].Columns[LineaTotal]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="LineaTotal"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[LineaTotal]"
                      lineageId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de origen de archivo plano].Columns[LineaTotal]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].Columns[FechaActual]"
                      cachedDataType="dbTimeStamp"
                      cachedName="FechaActual"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[FechaActual]"
                      lineageId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de columna derivada].Columns[FechaActual]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].Columns[UsuarioDelProceso]"
                      cachedDataType="wstr"
                      cachedLength="25"
                      cachedName="UsuarioDelProceso"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[UsuarioDelProceso]"
                      lineageId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de columna derivada].Columns[UsuarioDelProceso]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[ID]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[ID]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].Columns[TipoDePago]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TipoDePago"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[TipoDePago]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[TipoDePago]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].Columns[FechaPago]"
                      cachedDataType="date"
                      cachedName="FechaPago"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[FechaPago]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[FechaPago]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].Columns[Precio]"
                      cachedDataType="cy"
                      cachedName="Precio"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[Precio]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[Precio]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].Columns[Admitido]"
                      cachedDataType="bool"
                      cachedName="Admitido"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[Admitido]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[Admitido]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].Columns[RazonDelError]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="RazonDelError"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[RazonDelError]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[RazonDelError]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[LineaTotal]"
                      dataType="wstr"
                      length="250"
                      name="LineaTotal" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[FechaActual]"
                      dataType="dbTimeStamp"
                      name="FechaActual" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[UsuarioDelProceso]"
                      dataType="wstr"
                      length="25"
                      name="UsuarioDelProceso" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[TipoDePago]"
                      dataType="wstr"
                      length="50"
                      name="TipoDePago" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[FechaPago]"
                      dataType="dbTimeStamp"
                      name="FechaPago" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[Precio]"
                      dataType="cy"
                      name="Precio" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[Admitido]"
                      dataType="bool"
                      name="Admitido" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB].ExternalColumns[RazonDelError]"
                      dataType="wstr"
                      length="255"
                      name="RazonDelError" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Outputs[Salida de error de destino de OLE DB]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Salida de error de destino de OLE DB"
                  synchronousInputId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Outputs[Salida de error de destino de OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Outputs[Salida de error de destino de OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Outputs[Salida de error de destino de OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Outputs[Salida de error de destino de OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Carga de Tipos de Pago\Origen de archivo plano"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Origen de archivo plano;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;1"
              description="Origen de archivo plano"
              localeId="3082"
              name="Origen de archivo plano"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Especifica si las columnas de longitud cero se tratan como NULL."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre de una columna de salida que contiene el nombre de archivo. Si no se especifica ningún nombre, no se genera ninguna columna de salida con el nombre de archivo."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Carga de Tipos de Pago\Origen de archivo plano.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Administrador de conexiones de archivos planos]"
                  connectionManagerRefId="Package.ConnectionManagers[Administrador de conexiones de archivos planos]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de origen de archivo plano]"
                  name="Salida de origen de archivo plano">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de origen de archivo plano].Columns[LineaTotal]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de origen de archivo plano].ExternalColumns[LineaTotal]"
                      length="250"
                      lineageId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de origen de archivo plano].Columns[LineaTotal]"
                      name="LineaTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si los datos están en formato binario."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de origen de archivo plano].ExternalColumns[LineaTotal]"
                      dataType="wstr"
                      length="250"
                      name="LineaTotal" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de error de origen de archivo plano]"
                  isErrorOut="true"
                  name="Salida de error de origen de archivo plano">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de error de origen de archivo plano].Columns[Columna de salida de error de origen de archivo plano]"
                      codePage="65001"
                      dataType="text"
                      description="Columna de salida de error de origen de archivo plano"
                      lineageId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de error de origen de archivo plano].Columns[Columna de salida de error de origen de archivo plano]"
                      name="Columna de salida de error de origen de archivo plano" />
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de error de origen de archivo plano].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de error de origen de archivo plano].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de error de origen de archivo plano].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de error de origen de archivo plano].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Carga de Tipos de Pago\TiposDePago"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="Destino de OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;4"
              description="Destino de OLE DB"
              name="TiposDePago"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">[TiposDePago]</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica la página de códigos de columna para utilizar cuando la información de página de códigos no está disponible en el origen de datos."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Fuerza el uso del valor de la propiedad DefaultCodePage al describir datos de caracteres."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indica si los valores proporcionados para columnas de identidad se van a copiar al destino. Si es False, los valores de las columnas de identidad se generan automáticamente en el destino. Solo se aplica si está activada la carga rápida."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indica si las columnas que contienen NULL tendrán NULL insertado en el destino. Si es False, las columnas que contienen NULL tendrán sus valores predeterminados insertados en el destino. Solo se aplica si está activada la carga rápida."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Especifica opciones para usar con la carga rápida. Solo se aplica si está activada la carga rápida."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Especifica cuándo se emiten confirmaciones durante la inserción de datos. El valor 0 especifica que se emitirá una confirmación al final de la inserción de datos. Solo se aplica si está activada la carga rápida."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Carga de Tipos de Pago\TiposDePago.Connections[OleDbConnection]"
                  connectionManagerID="{92CFE9C8-3139-4E08-B39C-9BBDBA592D7B}:external"
                  connectionManagerRefId="Project.ConnectionManagers[__ETL.Staging]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB]"
                  errorOrTruncationOperation="Insertar"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Entrada de destino de OLE DB">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].Columns[LineaTotal]"
                      cachedDataType="wstr"
                      cachedLength="250"
                      cachedName="LineaTotal"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[LineaTotal]"
                      lineageId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de origen de archivo plano].Columns[LineaTotal]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[ID]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[ID]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].Columns[TipoDePago]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TipoDePago"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[TipoDePago]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[TipoDePago]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].Columns[FechaPago]"
                      cachedDataType="date"
                      cachedName="FechaPago"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[FechaPago]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[FechaPago]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].Columns[Precio]"
                      cachedDataType="cy"
                      cachedName="Precio"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[Precio]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[Precio]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].Columns[Admitido]"
                      cachedDataType="bool"
                      cachedName="Admitido"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[Admitido]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[Admitido]" />
                    <inputColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].Columns[RazonDelError]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="RazonDelError"
                      externalMetadataColumnId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[RazonDelError]"
                      lineageId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0].Columns[RazonDelError]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[LineaTotal]"
                      dataType="wstr"
                      length="250"
                      name="LineaTotal" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[TipoDePago]"
                      dataType="wstr"
                      length="50"
                      name="TipoDePago" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[FechaPago]"
                      dataType="dbTimeStamp"
                      name="FechaPago" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[Precio]"
                      dataType="cy"
                      name="Precio" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[Admitido]"
                      dataType="bool"
                      name="Admitido" />
                    <externalMetadataColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB].ExternalColumns[RazonDelError]"
                      dataType="wstr"
                      length="255"
                      name="RazonDelError" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Carga de Tipos de Pago\TiposDePago.Outputs[Salida de error de destino de OLE DB]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Salida de error de destino de OLE DB"
                  synchronousInputId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Outputs[Salida de error de destino de OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Carga de Tipos de Pago\TiposDePago.Outputs[Salida de error de destino de OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Carga de Tipos de Pago\TiposDePago.Outputs[Salida de error de destino de OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Carga de Tipos de Pago\TiposDePago.Outputs[Salida de error de destino de OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Carga de Tipos de Pago.Paths[Correcto]"
              endId="Package\Carga de Tipos de Pago\TiposDePago.Inputs[Entrada de destino de OLE DB]"
              name="Correcto"
              startId="Package\Carga de Tipos de Pago\División condicional.Outputs[Correcto]" />
            <path
              refId="Package\Carga de Tipos de Pago.Paths[Error]"
              endId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Inputs[Entrada de columna derivada]"
              name="Error"
              startId="Package\Carga de Tipos de Pago\División condicional.Outputs[Error]" />
            <path
              refId="Package\Carga de Tipos de Pago.Paths[Salida 0]"
              endId="Package\Carga de Tipos de Pago\División condicional.Inputs[Entrada de división condicional]"
              name="Salida 0"
              startId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Outputs[Salida 0]" />
            <path
              refId="Package\Carga de Tipos de Pago.Paths[Salida de columna derivada]"
              endId="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago.Inputs[Entrada de destino de OLE DB]"
              name="Salida de columna derivada"
              startId="Package\Carga de Tipos de Pago\Columna derivada para añadir información.Outputs[Salida de columna derivada]" />
            <path
              refId="Package\Carga de Tipos de Pago.Paths[Salida de origen de archivo plano]"
              endId="Package\Carga de Tipos de Pago\Componente de script LECTURA.Inputs[Entrada 0]"
              name="Salida de origen de archivo plano"
              startId="Package\Carga de Tipos de Pago\Origen de archivo plano.Outputs[Salida de origen de archivo plano]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="133,43"
          Id="Package\Carga CSV"
          TopLeft="323.124995185062,68.4210539194356" />
        <NodeLayout
          Size="195,43"
          Id="Package\Carga de Tipos de Pago"
          TopLeft="75.4999994039536,63.5526321069686" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Carga CSV">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="287,42"
          Id="Package\Carga CSV\Origen de Conexion CSV con Encabezado"
          TopLeft="346,44" />
        <NodeLayout
          Size="185,42"
          Id="Package\Carga CSV\DimensionOperario01"
          TopLeft="385.5,154.642857142857" />
        <EdgeLayout
          Id="Package\Carga CSV.Paths[Salida de origen de archivo plano]"
          TopLeft="489.5,86">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,68.642857142857"
              Start="0,0"
              End="-11.5,61.142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.3214285714285" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.3214285714285"
                    Point2="0,34.3214285714285"
                    Point3="-4,34.3214285714285" />
                  <mssgle:LineSegment
                    End="-7.5,34.3214285714285" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,34.3214285714285"
                    Point2="-11.5,34.3214285714285"
                    Point3="-11.5,38.3214285714285" />
                  <mssgle:LineSegment
                    End="-11.5,61.142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Carga CSV\DimensionOperario01">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Carga de Tipos de Pago">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="173,43"
          Id="Package\Carga de Tipos de Pago\División condicional"
          TopLeft="263.833333333333,210.833333333334" />
        <NodeLayout
          Size="236,43"
          Id="Package\Carga de Tipos de Pago\Componente de script LECTURA"
          TopLeft="232.5,108.166666666667" />
        <NodeLayout
          Size="193,43"
          Id="Package\Carga de Tipos de Pago\Origen de archivo plano"
          TopLeft="253.833333333333,5.50000000000004" />
        <NodeLayout
          Size="212,43"
          Id="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago"
          TopLeft="244.5,416.166666666667" />
        <NodeLayout
          Size="144,43"
          Id="Package\Carga de Tipos de Pago\TiposDePago"
          TopLeft="5.50000000000006,313.5" />
        <NodeLayout
          Size="281,43"
          Id="Package\Carga de Tipos de Pago\Columna derivada para añadir información"
          TopLeft="209.833333333333,313.5" />
        <EdgeLayout
          Id="Package\Carga de Tipos de Pago.Paths[Salida de origen de archivo plano]"
          TopLeft="350.5,48.1666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Carga de Tipos de Pago.Paths[Salida de columna derivada]"
          TopLeft="350.5,356.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Carga de Tipos de Pago.Paths[Salida 0]"
          TopLeft="350.5,150.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Carga de Tipos de Pago.Paths[Error]"
          TopLeft="378.055555555556,253.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-27.5555555555555,60.0000000000001"
              Start="0,0"
              End="-27.5555555555555,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.329268292683" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.329268292683"
                    Point2="0,24.329268292683"
                    Point3="-4,24.329268292683" />
                  <mssgle:LineSegment
                    End="-23.5555555555555,24.329268292683" />
                  <mssgle:CubicBezierSegment
                    Point1="-23.5555555555555,24.329268292683"
                    Point2="-27.5555555555555,24.329268292683"
                    Point3="-27.5555555555555,28.329268292683" />
                  <mssgle:LineSegment
                    End="-27.5555555555555,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.3064691840278,29.329268292683,23.0573828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Carga de Tipos de Pago.Paths[Correcto]"
          TopLeft="322.944444444444,253.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-245.444444444444,60.0000000000001"
              Start="0,0"
              End="-245.444444444444,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.329268292683" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.329268292683"
                    Point2="0,24.329268292683"
                    Point3="-4,24.329268292683" />
                  <mssgle:LineSegment
                    End="-241.444444444444,24.329268292683" />
                  <mssgle:CubicBezierSegment
                    Point1="-241.444444444444,24.329268292683"
                    Point2="-245.444444444444,24.329268292683"
                    Point3="-245.444444444444,28.329268292683" />
                  <mssgle:LineSegment
                    End="-245.444444444444,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-142.061773003472,29.329268292683,38.6791015625,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Carga de Tipos de Pago\Errores en Carga Tipo Pago">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Carga de Tipos de Pago\TiposDePago">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>